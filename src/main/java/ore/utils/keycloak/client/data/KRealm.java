package ore.utils.keycloak.client.data;

import java.util.List;
import java.util.Map;

public class KRealm extends BaseIdKeycloakDto {
    public Integer accessCodeLifespan;
    public Integer accessCodeLifespanLogin;
    public Integer accessCodeLifespanUserAction;
    public Integer accessTokenLifespan;
    public Integer accessTokenLifespanForImplicitFlow;
    public String accountTheme;
    public Integer actionTokenGeneratedByAdminLifespan;
    public Integer actionTokenGeneratedByUserLifespan;
    public Boolean adminEventsDetailsEnabled;
    public Boolean adminEventsEnabled;
    public String adminTheme;
    public Map<String, Object> attributes;
    public List<KAuthenticationFlowDto> authenticationFlows;
    public List<KAuthenticatorConfigDto> authenticatorConfig;
    public String browserFlow;
    public Map<String, Object> browserSecurityHeaders;
    public Boolean bruteForceProtected;
    public String clientAuthenticationFlow;
    public Map<String, Object> clientScopeMappings;
    public List<KClientTemplateDto> clientTemplates;
    public List<KClientDto> clients;
    public Map<String, Object> components;
    public List<String> defaultGroups;
    public String defaultLocale;
    public List<String> defaultRoles;
    public String directGrantFlow;
    public String displayName;
    public String displayNameHtml;
    public String dockerAuthenticationFlow;
    public Boolean duplicateEmailsAllowed;
    public Boolean editUsernameAllowed;
    public String emailTheme;
    public Boolean enabled;
    public List<String> enabledEventTypes;
    public Boolean eventsEnabled;
    public Long eventsExpiration;
    public List<String> eventsListeners;
    public Integer failureFactor;
    public List<KUserDto> federatedUsers;
    public List<KGroupDto> groups;
    public List<KIdentityProviderMapperDto> identityProviderMappers;
    public List<KIdentityProviderDto> identityProviders;
    public Boolean internationalizationEnabled;
    public String keycloakVersion;
    public String loginTheme;
    public Boolean loginWithEmailAllowed;
    public Integer maxDeltaTimeSeconds;
    public Integer maxFailureWaitSeconds;
    public Integer minimumQuickLoginWaitSeconds;
    public Integer notBefore;
    public Integer offlineSessionIdleTimeout;
    public String otpPolicyAlgorithm;
    public Integer otpPolicyDigits;
    public Integer otpPolicyInitialCounter;
    public Integer otpPolicyLookAheadWindow;
    public Integer otpPolicyPeriod;
    public String otpPolicyType;
    public List<String> otpSupportedApplications;
    public String passwordPolicy;
    public Boolean permanentLockout;
    public List<KProtocolMapperDto> protocolMappers;
    public Long quickLoginCheckMilliSeconds;
    public String realm;
    public Integer refreshTokenMaxReuse;
    public Boolean registrationAllowed;
    public Boolean registrationEmailAsUsername;
    public String registrationFlow;
    public Boolean rememberMe;
    public List<KRequiredActionProviderDto> requiredActions;
    public String resetCredentialsFlow;
    public Boolean resetPasswordAllowed;
    public Boolean revokeRefreshToken;
    public KRolesDto roles;
    public List<KScopeMappingDto> scopeMappings;
    public Map<String, Object> smtpServer;
    public String sslRequired;
    public Integer ssoSessionIdleTimeout;
    public Integer ssoSessionMaxLifespan;
    public List<String> supportedLocales;
    public List<KUserFederationMapperDto> userFederationMappers;
    public List<KUserFederationProviderDto> userFederationProviders;
    public List<KUserDto> users;
    public Boolean verifyEmail;
    public Integer waitIncrementSeconds;
}